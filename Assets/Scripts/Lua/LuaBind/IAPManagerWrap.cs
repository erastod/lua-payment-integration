//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class IAPManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(IAPManager), typeof(System.Object));
		L.RegFunction("AddProduct", AddProduct);
		L.RegFunction("Initialize", Initialize);
		L.RegFunction("PurchaseProduct", PurchaseProduct);
		L.RegFunction("OnInitialized", OnInitialized);
		L.RegFunction("OnInitializeFailed", OnInitializeFailed);
		L.RegFunction("ProcessPurchase", ProcessPurchase);
		L.RegFunction("OnPurchaseFailed", OnPurchaseFailed);
		L.RegFunction("New", _CreateIAPManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("OnInitializeAction", get_OnInitializeAction, set_OnInitializeAction);
		L.RegVar("OnInitializationFailureAction", get_OnInitializationFailureAction, set_OnInitializationFailureAction);
		L.RegVar("OnPurchaseSuccessfulAction", get_OnPurchaseSuccessfulAction, set_OnPurchaseSuccessfulAction);
		L.RegVar("OnPurchaseFailedAction", get_OnPurchaseFailedAction, set_OnPurchaseFailedAction);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateIAPManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				IAPManager obj = new IAPManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: IAPManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddProduct(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Purchasing.ProductType arg1 = (UnityEngine.Purchasing.ProductType)ToLua.CheckObject(L, 3, typeof(UnityEngine.Purchasing.ProductType));
			obj.AddProduct(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			obj.Initialize();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PurchaseProduct(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.PurchaseProduct(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInitialized(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			UnityEngine.Purchasing.IStoreController arg0 = (UnityEngine.Purchasing.IStoreController)ToLua.CheckObject<UnityEngine.Purchasing.IStoreController>(L, 2);
			UnityEngine.Purchasing.IExtensionProvider arg1 = (UnityEngine.Purchasing.IExtensionProvider)ToLua.CheckObject<UnityEngine.Purchasing.IExtensionProvider>(L, 3);
			obj.OnInitialized(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInitializeFailed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			UnityEngine.Purchasing.InitializationFailureReason arg0 = (UnityEngine.Purchasing.InitializationFailureReason)ToLua.CheckObject(L, 2, typeof(UnityEngine.Purchasing.InitializationFailureReason));
			obj.OnInitializeFailed(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ProcessPurchase(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			UnityEngine.Purchasing.PurchaseEventArgs arg0 = (UnityEngine.Purchasing.PurchaseEventArgs)ToLua.CheckObject<UnityEngine.Purchasing.PurchaseEventArgs>(L, 2);
			UnityEngine.Purchasing.PurchaseProcessingResult o = obj.ProcessPurchase(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPurchaseFailed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			IAPManager obj = (IAPManager)ToLua.CheckObject<IAPManager>(L, 1);
			UnityEngine.Purchasing.Product arg0 = (UnityEngine.Purchasing.Product)ToLua.CheckObject<UnityEngine.Purchasing.Product>(L, 2);
			UnityEngine.Purchasing.PurchaseFailureReason arg1 = (UnityEngine.Purchasing.PurchaseFailureReason)ToLua.CheckObject(L, 3, typeof(UnityEngine.Purchasing.PurchaseFailureReason));
			obj.OnPurchaseFailed(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnInitializeAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPManager obj = (IAPManager)o;
			System.Action<UnityEngine.Purchasing.IStoreController,UnityEngine.Purchasing.IExtensionProvider> ret = obj.OnInitializeAction;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnInitializeAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnInitializationFailureAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPManager obj = (IAPManager)o;
			System.Action<UnityEngine.Purchasing.InitializationFailureReason> ret = obj.OnInitializationFailureAction;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnInitializationFailureAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnPurchaseSuccessfulAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPManager obj = (IAPManager)o;
			System.Action<UnityEngine.Purchasing.PurchaseEventArgs> ret = obj.OnPurchaseSuccessfulAction;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPurchaseSuccessfulAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnPurchaseFailedAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPManager obj = (IAPManager)o;
			System.Action<UnityEngine.Purchasing.Product,UnityEngine.Purchasing.PurchaseFailureReason> ret = obj.OnPurchaseFailedAction;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPurchaseFailedAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnInitializeAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPManager obj = (IAPManager)o;
			System.Action<UnityEngine.Purchasing.IStoreController,UnityEngine.Purchasing.IExtensionProvider> arg0 = (System.Action<UnityEngine.Purchasing.IStoreController,UnityEngine.Purchasing.IExtensionProvider>)ToLua.CheckDelegate<System.Action<UnityEngine.Purchasing.IStoreController,UnityEngine.Purchasing.IExtensionProvider>>(L, 2);
			obj.OnInitializeAction = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnInitializeAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnInitializationFailureAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPManager obj = (IAPManager)o;
			System.Action<UnityEngine.Purchasing.InitializationFailureReason> arg0 = (System.Action<UnityEngine.Purchasing.InitializationFailureReason>)ToLua.CheckDelegate<System.Action<UnityEngine.Purchasing.InitializationFailureReason>>(L, 2);
			obj.OnInitializationFailureAction = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnInitializationFailureAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnPurchaseSuccessfulAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPManager obj = (IAPManager)o;
			System.Action<UnityEngine.Purchasing.PurchaseEventArgs> arg0 = (System.Action<UnityEngine.Purchasing.PurchaseEventArgs>)ToLua.CheckDelegate<System.Action<UnityEngine.Purchasing.PurchaseEventArgs>>(L, 2);
			obj.OnPurchaseSuccessfulAction = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPurchaseSuccessfulAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnPurchaseFailedAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IAPManager obj = (IAPManager)o;
			System.Action<UnityEngine.Purchasing.Product,UnityEngine.Purchasing.PurchaseFailureReason> arg0 = (System.Action<UnityEngine.Purchasing.Product,UnityEngine.Purchasing.PurchaseFailureReason>)ToLua.CheckDelegate<System.Action<UnityEngine.Purchasing.Product,UnityEngine.Purchasing.PurchaseFailureReason>>(L, 2);
			obj.OnPurchaseFailedAction = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnPurchaseFailedAction on a nil value");
		}
	}
}

